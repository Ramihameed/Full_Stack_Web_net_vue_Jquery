<div id="app">
    <h3>Add New Item</h3>
    <div class="container mt-3"></div>
    <div class="border rounded p-4 shadow-lg" style="border-color: #007bff; border-width: 4px;">
        <form class="form-control">
            <input v-model="newItem.name" type="text" placeholder="Name" class="form-control form-control-lg w-100" v-on:input="validateName()" required />
            <div v-if="validationErrors.TextError" class="text-danger">
                {{ validationErrors.TextError }}                
            </div>
            <input v-model="newItem.description" type="text" placeholder="Description" class="form-control form-control-lg w-100" required />
            <input v-model="newItem.price" type="number" placeholder="Price" class="form-control form-control-lg w-100"  required />
            
            <button type="button" v-on:click="addItemReal()" class="btn btn-primary">Add Item</button>
            <button type="button" v-on:click="returnPage()" class="btn btn-secondary">Return to Index</button>
        </form>
    </div>
</div>

<script>
    new Vue({
      el: '#app',
      data:  
         {
          newItem: {
            name: '',
            description: '',
            price: 0
            
          },
          validationErrors: {
        TextError: '',
      }
        }
      ,
      methods: {
        addItemReal() {
          const newItem = {
            name: this.newItem.name,
            description: this.newItem.description,
            price: this.newItem.price
          };

          axios.post('/Item/AddItem', newItem)
            .then(response => {
              console.log('Item added successfully', response);
              swal("added Successfully", "added Successfully", "success")
              setTimeout(() => {
          this.returnPage();
        }, 3000); 
      })
     
            .catch(error => {
              console.error('Error adding item:', error);
            });
        },
        returnPage() {
          window.location.href = '/Item';
        },
              // (only letters and spaces allowed)
        validateName() {
        const nameRegex = /^[a-zA-Z\s]*$/;
        if (!this.newItem.name) {
          this.validationErrors.TextError = 'Name is required.';
        } else if (!nameRegex.test(this.newItem.name)) {
          this.validationErrors.TextError = 'Please enter a valid name (only letters and spaces allowed).';
        } else {
          this.validationErrors.TextError = '';
        }
      },    
      }
    });
</script>
