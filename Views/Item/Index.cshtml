@{
    ViewData["Title"] = "Items";
}
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>

    <meta name="viewport" content="width=device-width" />
    <title>Server-Side Data Processing</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/css/datatables.bundle.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css">
    <link href="~/css/datatables.bundle.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <!-- Axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- Bootstrap CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Correct Bootstrap Bundle with Popper.js included -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <link href="~/css/custom.css" rel="stylesheet" />

</head>
<body>

    @*<div id="app">
    <div v-if="loading">
        Loading items...
    </div>
    <div v-else>*@
    <div id="app">
        <h2 class="centered-heading">Items List Data Table</h2>
        <div class="container mt-4">

                <div class="row">

                    <div class="col-6 mb-3" >
                        <!-- Actions Dropdown -->
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                Actions
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="#" v-on:click="addItem()">Add</a></li>
                            <li><a class="dropdown-item" href="#" v-on:click="Delete()">Delete</a></li>
                            <li><a class="dropdown-item" href="#" v-on:click="EditItem()">Edit</a></li>

                            </ul>
                        </div>
                    </div>

                    <div class="col-6 mb-3">
                    <button v-on:click="home()" class="btn btn-info">Back Home</button>

                    </div>
                </div>
    </div>
    <div class="table-responsive">
            <table id="kt_table_1" class="table table-hover table-striped table-bordered" style="width:100%">

            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                 
                </tr>

            </thead>
            <tbody>

                @*  <button type="button" v-on:click="EditItem(item.id)" class="btn btn-primary">
                        Edit
                    </button>
                    <button type="button" v-on:click="Delete(item.id)" class="btn btn-danger">
                        Delete
                    </button> *@

            </tbody>
        </table>
            </div>
        </div>
   @* </div>
    *@

</body>
</html>



<script>
            var KTDatatablesAdvancedMultipleControls = function () {

        var initTable1 = function () {

            var table = $('#kt_table_1');

            // begin first table

            table.DataTable({

                // DOM Layout settings

                processing: true,

                serverSide: true,

                filter: true,

                order: [[0, "desc"]],

                searchDelay: 500,

                language: {

                    searchPlaceholder: "Search by keyword",

                    emptyTable: "No records found",

                    "sSearch": "",

                    url: ""

                },

                orderMulti: true,

                pagingType: 'full_numbers',

                responsive: {

                    details: {

                       // display: $.fn.dataTable.Responsive.display.childRowImmediate,

                        type: 'none',

                        target: ''

                    },

                },

                dom:

                    "<'row'<'col-lg-12 col-md-12'f>>" +

                    "<'row'<'col-sm-12'tr>>" +

                    "<'row'<'col-sm-12 col-md-9'i><'col-sm-12 col-md-3'l>>" +

                    "<'row'<'col-sm-12 col-md-12'p>>", // read more: https://datatables.net/examples/basic_init/dom.html

                ajax: {

                    url: '/Item/GetItems',

                    type: "POST",

                    contentType: "application/x-www-form-urlencoded"

                },

                columnDefs: [

                    {

                        targets: 0,

                        orderable: false,

                        visible: false,

                    },

                   {

                        targets: -1,

                        orderable: false,

                        render: function (data, type, full, meta) {


                           return `$`+data;

                        }

                    },

                ],

                columns: [

                     { "data": "id", "name": "id", "autoWidth": false },

                     { "data": "name", "name": "name", "autoWidth": false },

                     { "data": "description", "name": "description", "autoWidth": false },


                     { "data": "price", "name": "price", "autoWidth": false }




    @*{ "data": "Departmentname", "name": "Departmentname", "autoWidth": false }*@





                ],

            });

        };

        return {

            //main function to initiate the module

            init: function () {

                initTable1();

            },

        };

    }();

    $(document).ready(function () {

        KTDatatablesAdvancedMultipleControls.init();

        $('.dataTables_filter input').attr('maxlength', 255);

    });


</script>







<script>
        new Vue({
        el: '#app',
        data: {
            items: [],
            newItem: {
                name: '',
                description: '',
                price: 0,
                Departmentname : ''

            },
            loading: true,
        },
        beforeMount() {
            this.fetchItems();
        },
        methods: {
            home(){
           window.location.href = `/Home/`;

            },
            EditItem() {
                window.location.href = `/Item/Editt/`;
            },
            fetchItems() {
                axios.get('/Item/GetItems')
                    .then(response => {
                        this.items = response.data;
                        console.log(response);
                        this.loading = false;
                    })
                    .catch(error => {
                        console.error('Error fetching items:', error);
                        this.loading = false;
                    });
            },
            addItem() {

                window.location.href = `/Item/AddItemPage`;
                },
                Delete() {
        window.location.href = `/Item/Deletee`;
    }

            ,
            clearForm() {
                this.newItem.name = '';
                this.newItem.description = '';
                this.newItem.price = 0;
            }
        }
    });
</script>
