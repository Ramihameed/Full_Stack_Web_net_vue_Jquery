@{
    ViewData["Title"] = "Items";
}
<div id="app">
    <div v-if="loading">
        Loading items...
    </div>
    <div v-else>
        <h2>Items List</h2>

        <button type="button" v-on:click="addItem()" class="btn btn-success">Add</button>

        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in items" :key="item.id">
                    <td>{{ item.name }}</td>
                    <td>{{ item.description }}</td>
                    <td>{{ item.price }}</td>
                    <td>
                        <button type="button" v-on:click="EditItem(item.id)" class="btn btn-primary">
                            Edit
                        </button>
                        <button type="button" v-on:click="Delete(item.id)" class="btn btn-danger">
                            Delete
                        </button>
                    </td>
                    
                </tr>
            </tbody>
        </table>
    <hr />

    
    </div>
        </div>



<script>
        new Vue({
        el: '#app',
        data: {
            items: [],
            newItem: {
                name: '',
                description: '',
                price: 0
            },
            loading: true,
        },
        beforeMount() {
            this.fetchItems();
        },
        methods: {
            EditItem(itemId) {
                window.location.href = `/Item/Edit/${itemId}`;
            },
            fetchItems() {
                axios.get('/Item/GetItems')
                    .then(response => {
                        this.items = response.data;
                        this.loading = false;
                    })
                    .catch(error => {
                        console.error('Error fetching items:', error);
                        this.loading = false; 
                    });
            },
            addItem() {
                
                window.location.href = `/Item/AddItemPage`;
                },Delete(itemId) {
        axios.delete(`/Item/Delete/${itemId}`)
            .then(response => {
                this.fetchItems();  // Reload the items after successful deletion
            })
            .catch(error => {
                console.error('Error deleting item:', error);
            });
    }

            ,
            clearForm() {
                this.newItem.name = '';
                this.newItem.description = '';
                this.newItem.price = 0;
            }
        }
    });
</script>
