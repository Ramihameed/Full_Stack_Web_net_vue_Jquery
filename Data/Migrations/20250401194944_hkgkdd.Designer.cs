// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingForDatabase.Data;

#nullable disable

namespace TrainingForDatabase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250401194944_hkgkdd")]
    partial class hkgkdd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "HR"
                        },
                        new
                        {
                            Id = 2,
                            name = "IT"
                        },
                        new
                        {
                            Id = 3,
                            name = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            name = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            name = "Sales"
                        },
                        new
                        {
                            Id = 6,
                            name = "Operations"
                        },
                        new
                        {
                            Id = 7,
                            name = "Legal"
                        },
                        new
                        {
                            Id = 8,
                            name = "Customer Service"
                        },
                        new
                        {
                            Id = 9,
                            name = "Research and Development"
                        },
                        new
                        {
                            Id = 10,
                            name = "Supply Chain"
                        });
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            description = "Description 1",
                            name = "Item 1",
                            price = 131
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            description = "Description 2",
                            name = "Item 2",
                            price = 628
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            description = "Description 3",
                            name = "Item 3",
                            price = 270
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            description = "Description 4",
                            name = "Item 4",
                            price = 161
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            description = "Description 5",
                            name = "Item 5",
                            price = 955
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 1,
                            description = "Description 6",
                            name = "Item 6",
                            price = 449
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 2,
                            description = "Description 7",
                            name = "Item 7",
                            price = 442
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 3,
                            description = "Description 8",
                            name = "Item 8",
                            price = 792
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 4,
                            description = "Description 9",
                            name = "Item 9",
                            price = 563
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 5,
                            description = "Description 10",
                            name = "Item 10",
                            price = 406
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 6,
                            description = "Description 11",
                            name = "Item 11",
                            price = 319
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 7,
                            description = "Description 12",
                            name = "Item 12",
                            price = 329
                        },
                        new
                        {
                            Id = 13,
                            DepartmentId = 8,
                            description = "Description 13",
                            name = "Item 13",
                            price = 269
                        },
                        new
                        {
                            Id = 14,
                            DepartmentId = 9,
                            description = "Description 14",
                            name = "Item 14",
                            price = 242
                        },
                        new
                        {
                            Id = 15,
                            DepartmentId = 10,
                            description = "Description 15",
                            name = "Item 15",
                            price = 744
                        },
                        new
                        {
                            Id = 16,
                            DepartmentId = 1,
                            description = "Description 16",
                            name = "Item 16",
                            price = 120
                        },
                        new
                        {
                            Id = 17,
                            DepartmentId = 2,
                            description = "Description 17",
                            name = "Item 17",
                            price = 384
                        },
                        new
                        {
                            Id = 18,
                            DepartmentId = 3,
                            description = "Description 18",
                            name = "Item 18",
                            price = 633
                        },
                        new
                        {
                            Id = 19,
                            DepartmentId = 4,
                            description = "Description 19",
                            name = "Item 19",
                            price = 684
                        },
                        new
                        {
                            Id = 20,
                            DepartmentId = 5,
                            description = "Description 20",
                            name = "Item 20",
                            price = 578
                        },
                        new
                        {
                            Id = 21,
                            DepartmentId = 6,
                            description = "Description 21",
                            name = "Item 21",
                            price = 882
                        },
                        new
                        {
                            Id = 22,
                            DepartmentId = 7,
                            description = "Description 22",
                            name = "Item 22",
                            price = 8
                        },
                        new
                        {
                            Id = 23,
                            DepartmentId = 8,
                            description = "Description 23",
                            name = "Item 23",
                            price = 984
                        },
                        new
                        {
                            Id = 24,
                            DepartmentId = 9,
                            description = "Description 24",
                            name = "Item 24",
                            price = 5
                        },
                        new
                        {
                            Id = 25,
                            DepartmentId = 10,
                            description = "Description 25",
                            name = "Item 25",
                            price = 143
                        },
                        new
                        {
                            Id = 26,
                            DepartmentId = 1,
                            description = "Description 26",
                            name = "Item 26",
                            price = 382
                        },
                        new
                        {
                            Id = 27,
                            DepartmentId = 2,
                            description = "Description 27",
                            name = "Item 27",
                            price = 460
                        },
                        new
                        {
                            Id = 28,
                            DepartmentId = 3,
                            description = "Description 28",
                            name = "Item 28",
                            price = 234
                        },
                        new
                        {
                            Id = 29,
                            DepartmentId = 4,
                            description = "Description 29",
                            name = "Item 29",
                            price = 923
                        },
                        new
                        {
                            Id = 30,
                            DepartmentId = 5,
                            description = "Description 30",
                            name = "Item 30",
                            price = 200
                        },
                        new
                        {
                            Id = 31,
                            DepartmentId = 6,
                            description = "Description 31",
                            name = "Item 31",
                            price = 385
                        },
                        new
                        {
                            Id = 32,
                            DepartmentId = 7,
                            description = "Description 32",
                            name = "Item 32",
                            price = 414
                        },
                        new
                        {
                            Id = 33,
                            DepartmentId = 8,
                            description = "Description 33",
                            name = "Item 33",
                            price = 750
                        },
                        new
                        {
                            Id = 34,
                            DepartmentId = 9,
                            description = "Description 34",
                            name = "Item 34",
                            price = 857
                        },
                        new
                        {
                            Id = 35,
                            DepartmentId = 10,
                            description = "Description 35",
                            name = "Item 35",
                            price = 52
                        },
                        new
                        {
                            Id = 36,
                            DepartmentId = 1,
                            description = "Description 36",
                            name = "Item 36",
                            price = 810
                        },
                        new
                        {
                            Id = 37,
                            DepartmentId = 2,
                            description = "Description 37",
                            name = "Item 37",
                            price = 383
                        },
                        new
                        {
                            Id = 38,
                            DepartmentId = 3,
                            description = "Description 38",
                            name = "Item 38",
                            price = 915
                        },
                        new
                        {
                            Id = 39,
                            DepartmentId = 4,
                            description = "Description 39",
                            name = "Item 39",
                            price = 743
                        },
                        new
                        {
                            Id = 40,
                            DepartmentId = 5,
                            description = "Description 40",
                            name = "Item 40",
                            price = 169
                        },
                        new
                        {
                            Id = 41,
                            DepartmentId = 6,
                            description = "Description 41",
                            name = "Item 41",
                            price = 726
                        },
                        new
                        {
                            Id = 42,
                            DepartmentId = 7,
                            description = "Description 42",
                            name = "Item 42",
                            price = 584
                        },
                        new
                        {
                            Id = 43,
                            DepartmentId = 8,
                            description = "Description 43",
                            name = "Item 43",
                            price = 642
                        },
                        new
                        {
                            Id = 44,
                            DepartmentId = 9,
                            description = "Description 44",
                            name = "Item 44",
                            price = 955
                        },
                        new
                        {
                            Id = 45,
                            DepartmentId = 10,
                            description = "Description 45",
                            name = "Item 45",
                            price = 667
                        },
                        new
                        {
                            Id = 46,
                            DepartmentId = 1,
                            description = "Description 46",
                            name = "Item 46",
                            price = 430
                        },
                        new
                        {
                            Id = 47,
                            DepartmentId = 2,
                            description = "Description 47",
                            name = "Item 47",
                            price = 657
                        },
                        new
                        {
                            Id = 48,
                            DepartmentId = 3,
                            description = "Description 48",
                            name = "Item 48",
                            price = 960
                        },
                        new
                        {
                            Id = 49,
                            DepartmentId = 4,
                            description = "Description 49",
                            name = "Item 49",
                            price = 883
                        },
                        new
                        {
                            Id = 50,
                            DepartmentId = 5,
                            description = "Description 50",
                            name = "Item 50",
                            price = 596
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Item", b =>
                {
                    b.HasOne("TrainingForDatabase.Models.Department", "Department")
                        .WithMany("items")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Department", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
