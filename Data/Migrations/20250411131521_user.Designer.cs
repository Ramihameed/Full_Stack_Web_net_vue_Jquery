// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingForDatabase.Data;

#nullable disable

namespace TrainingForDatabase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250411131521_user")]
    partial class user
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Introduction to Computer Science"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "History of Western Civilization"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Data Structures and Algorithms"
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "Principles of Marketing"
                        },
                        new
                        {
                            CourseId = 5,
                            CourseName = "Financial Accounting"
                        },
                        new
                        {
                            CourseId = 6,
                            CourseName = "Human Resource Management"
                        },
                        new
                        {
                            CourseId = 7,
                            CourseName = "Operations Management"
                        },
                        new
                        {
                            CourseId = 8,
                            CourseName = "Business Law"
                        },
                        new
                        {
                            CourseId = 9,
                            CourseName = "Advanced Software Development"
                        },
                        new
                        {
                            CourseId = 10,
                            CourseName = "Corporate Strategy"
                        },
                        new
                        {
                            CourseId = 11,
                            CourseName = "Economics for Business"
                        },
                        new
                        {
                            CourseId = 12,
                            CourseName = "International Business"
                        },
                        new
                        {
                            CourseId = 13,
                            CourseName = "Supply Chain Management"
                        },
                        new
                        {
                            CourseId = 14,
                            CourseName = "Project Management"
                        },
                        new
                        {
                            CourseId = 15,
                            CourseName = "Digital Marketing"
                        },
                        new
                        {
                            CourseId = 16,
                            CourseName = "Software Engineering"
                        },
                        new
                        {
                            CourseId = 17,
                            CourseName = "Artificial Intelligence"
                        },
                        new
                        {
                            CourseId = 18,
                            CourseName = "Cloud Computing"
                        },
                        new
                        {
                            CourseId = 19,
                            CourseName = "Business Analytics"
                        },
                        new
                        {
                            CourseId = 20,
                            CourseName = "Leadership and Management"
                        },
                        new
                        {
                            CourseId = 21,
                            CourseName = "Managerial Accounting"
                        },
                        new
                        {
                            CourseId = 22,
                            CourseName = "Legal Aspects of Business"
                        },
                        new
                        {
                            CourseId = 23,
                            CourseName = "Cybersecurity"
                        },
                        new
                        {
                            CourseId = 24,
                            CourseName = "Enterprise Resource Planning"
                        },
                        new
                        {
                            CourseId = 25,
                            CourseName = "Supply Chain Logistics"
                        },
                        new
                        {
                            CourseId = 26,
                            CourseName = "Corporate Governance"
                        },
                        new
                        {
                            CourseId = 27,
                            CourseName = "Corporate Social Responsibility"
                        },
                        new
                        {
                            CourseId = 28,
                            CourseName = "Business Intelligence"
                        },
                        new
                        {
                            CourseId = 29,
                            CourseName = "Advanced Marketing Strategies"
                        },
                        new
                        {
                            CourseId = 30,
                            CourseName = "Financial Management"
                        },
                        new
                        {
                            CourseId = 31,
                            CourseName = "Human Behavior in Organizations"
                        },
                        new
                        {
                            CourseId = 32,
                            CourseName = "Digital Transformation"
                        },
                        new
                        {
                            CourseId = 33,
                            CourseName = "Mobile App Development"
                        },
                        new
                        {
                            CourseId = 34,
                            CourseName = "Ethics in Business"
                        },
                        new
                        {
                            CourseId = 35,
                            CourseName = "Global Supply Chain Strategies"
                        },
                        new
                        {
                            CourseId = 36,
                            CourseName = "Cloud Security"
                        },
                        new
                        {
                            CourseId = 37,
                            CourseName = "Data Science and Big Data"
                        },
                        new
                        {
                            CourseId = 38,
                            CourseName = "Financial Planning"
                        },
                        new
                        {
                            CourseId = 39,
                            CourseName = "E-commerce"
                        },
                        new
                        {
                            CourseId = 40,
                            CourseName = "Innovation and Entrepreneurship"
                        });
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "Human Resources"
                        },
                        new
                        {
                            Id = 2,
                            name = "Information Technology"
                        },
                        new
                        {
                            Id = 3,
                            name = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            name = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            name = "Sales"
                        },
                        new
                        {
                            Id = 6,
                            name = "Operations"
                        },
                        new
                        {
                            Id = 7,
                            name = "Legal"
                        },
                        new
                        {
                            Id = 8,
                            name = "Customer Support"
                        },
                        new
                        {
                            Id = 9,
                            name = "Research & Development"
                        },
                        new
                        {
                            Id = 10,
                            name = "Supply Chain"
                        });
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 2,
                            description = "Dell XPS 13",
                            name = "Laptop",
                            price = 999
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            description = "Ergonomic Office Chair",
                            name = "Office Chair",
                            price = 150
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            description = "Apple iPhone 14",
                            name = "Smartphone",
                            price = 799
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 1,
                            description = "HP LaserJet Pro",
                            name = "Printer",
                            price = 200
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 4,
                            description = "Epson Projector 1080p",
                            name = "Conference Room Projector",
                            price = 1200
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 1,
                            description = "Wooden Executive Desk",
                            name = "Desk",
                            price = 300
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 2,
                            description = "Bose QuietComfort 35",
                            name = "Headphones",
                            price = 350
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 8,
                            description = "Logitech C920",
                            name = "Webcam",
                            price = 80
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 5,
                            description = "Salesforce Subscription",
                            name = "Sales CRM Software",
                            price = 1500
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 8,
                            description = "Zendesk Subscription",
                            name = "Customer Support Software",
                            price = 500
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 3,
                            description = "QuickBooks Online",
                            name = "Accounting Software",
                            price = 300
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 2,
                            description = "AWS EC2 Subscription",
                            name = "Cloud Hosting Service",
                            price = 1000
                        },
                        new
                        {
                            Id = 13,
                            DepartmentId = 9,
                            description = "Autodesk Fusion 360",
                            name = "R&D Software License",
                            price = 200
                        },
                        new
                        {
                            Id = 14,
                            DepartmentId = 10,
                            description = "SAP SCM License",
                            name = "Supply Chain Management Tool",
                            price = 3000
                        },
                        new
                        {
                            Id = 15,
                            DepartmentId = 7,
                            description = "LexisNexis Subscription",
                            name = "Legal Compliance Software",
                            price = 400
                        });
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Name = "John Doe"
                        },
                        new
                        {
                            StudentId = 2,
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            StudentId = 3,
                            Name = "Chris Williams"
                        },
                        new
                        {
                            StudentId = 4,
                            Name = "Mary Smith"
                        },
                        new
                        {
                            StudentId = 5,
                            Name = "David Lee"
                        },
                        new
                        {
                            StudentId = 6,
                            Name = "Sophia Brown"
                        },
                        new
                        {
                            StudentId = 7,
                            Name = "James Wilson"
                        },
                        new
                        {
                            StudentId = 8,
                            Name = "Linda Martinez"
                        },
                        new
                        {
                            StudentId = 9,
                            Name = "Michael Taylor"
                        },
                        new
                        {
                            StudentId = 10,
                            Name = "Sarah Anderson"
                        },
                        new
                        {
                            StudentId = 11,
                            Name = "Daniel Thomas"
                        },
                        new
                        {
                            StudentId = 12,
                            Name = "Emma Jackson"
                        },
                        new
                        {
                            StudentId = 13,
                            Name = "Lucas White"
                        },
                        new
                        {
                            StudentId = 14,
                            Name = "Mia Clark"
                        },
                        new
                        {
                            StudentId = 15,
                            Name = "Ethan Hall"
                        },
                        new
                        {
                            StudentId = 16,
                            Name = "Oliver Allen"
                        },
                        new
                        {
                            StudentId = 17,
                            Name = "Charlotte Young"
                        },
                        new
                        {
                            StudentId = 18,
                            Name = "Benjamin King"
                        },
                        new
                        {
                            StudentId = 19,
                            Name = "Amelia Scott"
                        },
                        new
                        {
                            StudentId = 20,
                            Name = "Henry Harris"
                        },
                        new
                        {
                            StudentId = 21,
                            Name = "Ella Walker"
                        },
                        new
                        {
                            StudentId = 22,
                            Name = "Samuel Lewis"
                        },
                        new
                        {
                            StudentId = 23,
                            Name = "Victoria King"
                        },
                        new
                        {
                            StudentId = 24,
                            Name = "Jack White"
                        },
                        new
                        {
                            StudentId = 25,
                            Name = "Ava Green"
                        },
                        new
                        {
                            StudentId = 26,
                            Name = "Liam Adams"
                        },
                        new
                        {
                            StudentId = 27,
                            Name = "Isabella Nelson"
                        },
                        new
                        {
                            StudentId = 28,
                            Name = "Henry Carter"
                        },
                        new
                        {
                            StudentId = 29,
                            Name = "Sophia Mitchell"
                        },
                        new
                        {
                            StudentId = 30,
                            Name = "Oliver Perez"
                        },
                        new
                        {
                            StudentId = 31,
                            Name = "Charlotte Murphy"
                        },
                        new
                        {
                            StudentId = 32,
                            Name = "Jack Robinson"
                        },
                        new
                        {
                            StudentId = 33,
                            Name = "Liam Martinez"
                        },
                        new
                        {
                            StudentId = 34,
                            Name = "Mia Evans"
                        },
                        new
                        {
                            StudentId = 35,
                            Name = "Ethan Gonzalez"
                        },
                        new
                        {
                            StudentId = 36,
                            Name = "Emily Reed"
                        },
                        new
                        {
                            StudentId = 37,
                            Name = "Logan Cooper"
                        },
                        new
                        {
                            StudentId = 38,
                            Name = "Scarlett Mitchell"
                        },
                        new
                        {
                            StudentId = 39,
                            Name = "Mason Perez"
                        },
                        new
                        {
                            StudentId = 40,
                            Name = "Zoe Stewart"
                        });
                });

            modelBuilder.Entity("TrainingForDatabase.Models.StudentCourses", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Item", b =>
                {
                    b.HasOne("TrainingForDatabase.Models.Department", "Department")
                        .WithMany("items")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Media", b =>
                {
                    b.HasOne("TrainingForDatabase.Models.Department", "Department")
                        .WithMany("Media")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TrainingForDatabase.Models.StudentCourses", b =>
                {
                    b.HasOne("TrainingForDatabase.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingForDatabase.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Department", b =>
                {
                    b.Navigation("Media");

                    b.Navigation("items");
                });

            modelBuilder.Entity("TrainingForDatabase.Models.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
